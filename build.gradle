/*
Запуск
    gradle run
 */

plugins {
    id 'java'
    id 'application'
}

apply from: rootDir.toPath().resolve('logic.gradle').toFile()

ext {
    slf4j_version = '1.7.30'
    logback_version = '1.2.3'
    dagger2_version = '2.33'
    junit_version = '5.5.2'

    libs = [
            lombok     : 'org.projectlombok:lombok:1.18.12',
            annotations: 'com.google.code.findbugs:jsr305:3.0.2',
            guava      : 'com.google.guava:guava:30.1-jre',
            lang3      : 'org.apache.commons:commons-lang3:3.11',
    ]

    libs.logger = [
            slf4j  : ["org.slf4j:slf4j-api:${slf4j_version}",
                      "org.slf4j:jcl-over-slf4j:${slf4j_version}"],
            logback: ["ch.qos.logback:logback-core:${logback_version}",
                      "ch.qos.logback:logback-classic:${logback_version}"]
    ]

    libs.dagger2 = [
            implementation: "com.google.dagger:dagger:${dagger2_version}",
            annotationProcessor: "com.google.dagger:dagger-compiler:${dagger2_version}"
    ]

    libs.junit5 = [
            api: "org.junit.jupiter:junit-jupiter-api:${junit_version}",
            //runtime only
            engine: "org.junit.jupiter:junit-jupiter-engine:${junit_version}",
            params: "org.junit.jupiter:junit-jupiter-params:${junit_version}"
    ]
}

dependencies {
    annotationProcessor libs.lombok
    compileOnly libs.lombok
    compileOnly libs.annotations

    implementation libs.logger.slf4j
    implementation libs.logger.logback

    implementation libs.dagger2.implementation
    annotationProcessor libs.dagger2.annotationProcessor

    implementation platform('io.projectreactor:reactor-bom:2020.0.6')
    implementation 'io.projectreactor:reactor-core'

    implementation 'io.netty:netty-all:4.1.22.Final'
    implementation libs.guava

    testImplementation libs.junit5.api
    testImplementation libs.junit5.params
    testRuntimeOnly libs.junit5.engine

    testImplementation libs.lang3
}

application {
    mainClassName = 'mc.server.Main'
}

test {
    useJUnitPlatform()
}
